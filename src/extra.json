{
    "openapi": "3.0.0",
  "info": {
      "title": "CSE341 Team Project -- Jewelery Cataloger",
      "version": "1.0.0",
      "description": "A program for cataloging jewelry items for insurance purposes ---- <button><a href='http://localhost:8080/logout'>LOGOUT</a></button> ---- "
    },
    "servers": [
      {
          "url": "http://localhost:8080",
          "description": "Development server"
      },
      {
        "url": "https://cse-341-team-jewelry-cataloger.herokuapp.com",
        "description": "Host server"
      }
    ],
    "tags": [
      {
        "name": "user",
        "description": "Stuff for inputing and changing a customers user's data."
      },
      {
        "name": "market",
        "description": "Price and infromation for metal and stones."
      },
      {
        "name": "jewelry",
        "description": "Description and details about the jewelry item."
      },
      {
        "name": "insurance",
        "description": "Insurance company and policy information."
      }
    ],
    "components": {
      "schemas": {
        "PostNewInsuranceInput":{
          "type": "object",
          "required": [
            "insurance_company",
            "insurance_policy"
          ],
          "properties": {
            "insurance_company":{
              "type": "string",
              "default": "Geico"
            },
            "insurance_agent":{
              "type": "string",
              "default": "Steve"
            },
            "insurance_policy":{
              "type": "string",
              "default": "8942-754245"
            }
  
          }
        }
      }
    },
    
    "paths": {
      "/user/": {
        "get": {
          "tags": ["user"],
          "description": "Get all Users in the database",
          "parameters": [],
          "responses": {
            "200": {
              "description": "OK"
            },
            "400": {
              "description": "Bad Request"
            },
            "401": {
              "description": "Unauthorized"
            },
            "503": {
              "description": "Service Unavailable"
            }
          }
        },
        "post": {
          "tags": [
            "user"
          ],
          "description": "Create a new User",
        
          "parameters": [
            {
              "name": "body",
              "in": "path",
              "required": true,
              "schema": {
                "type": "object",
                "properties": {
                  "first_name": {
                    "type": "string",
                    "example": "any"
                  },
                  "last_name": {
                    "type":"string",
                    "example": "any"
                  },
                  "email_address": {
                    "type":"string",
                    "example": "any"
                  },
                  "phone_number": {
                    "type":"string",
                    "example": "1234567890"
                  },
                  "street_address": {
                    "example": "any"
                  },
                  "city": {
                    "example": "any"
                  },
                  "state": {
                    "example": "any"
                  },
                  "zipcode": {
                    "example": "any"
                  }
                }
              }
            }
          ],
          "responses": {
            "201": {
              "description": "Created"
            },
            "400": {
              "description": "Bad Request"
            },
            "401": {
              "description": "Unauthorized"
            },
            "503": {
              "description": "Service Unavailable"
            }
          }
        }
      },
      "/user/{id}": {
        "get": {
          "tags": [
            "user"
          ],
          "description": "Get a single user based on the ID",
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "schema": {
                "type": "string"
              }, 
              "required": true,
              "description": "The user id"
            }
          ],
          "responses": {
            "200": {
              "description": "OK"
            },
            "400": {
              "description": "Bad Request"
            },
            "401": {
              "description": "Unauthorized"
            },
            "404": {
              "description": "Not Found"
            },
            "503": {
              "description": "Service Unavailable"
            }
          }
        },
        "put": {
          "tags": [
            "user"
          ],
          "description": "Update a User",
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "required": true,
              "type": "string"
            },
            {
              "name": "body",
              "in": "body",
              "schema": {
                "type": "object",
                "properties": {
                  "first_name": {
                    "example": "any"
                  },
                  "last_name": {
                    "example": "any"
                  },
                  "email_address": {
                    "example": "any"
                  },
                  "phone_number": {
                    "example": "1234567890"
                  },
                  "street_address": {
                    "example": "any"
                  },
                  "city": {
                    "example": "any"
                  },
                  "state": {
                    "example": "any"
                  },
                  "zipcode": {
                    "example": "any"
                  }
                }
              }
            }
          ],
          "responses": {
            "204": {
              "description": "No Content"
            },
            "400": {
              "description": "Bad Request"
            },
            "401": {
              "description": "Unauthorized"
            },
            "404": {
              "description": "Not Found"
            },
            "500": {
              "description": "Internal Server Error"
            }
          }
        },
        "delete": {
          "tags": [
            "user"
          ],
          "description": "Delete a User",
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "schema": {
                "type": "string"
              },
              "required": true,
              "description": "The user id"
            }],
          "responses": {
            "200": {
              "description": "OK"
            },
            "400": {
              "description": "Bad Request"
            },
            "404": {
              "description": "Not Found"
            },
            "401": {
              "description": "Unauthorized"
            },
            "500": {
              "description": "Internal Server Error"
            }
          }
        }
      },
      "/insurance/": {
        "get": {
          "tags": [
            "insurance"
          ],
          "description": "Get all insurance instances in the database",
          "responses": {
            "200": {
              "description": "OK"
            },
            "400": {
              "description": "Bad Request"
            },
            "401": {
              "description": "Unauthorized"
            },
            "503": {
              "description": "Service Unavailable"
            }
          }
        },
        "post": {
          "tags": [
            "insurance"
          ],
          "description": "Create a new insurance instance",
          "requestBody":{
            "required": true,
            "content": {"application/json": {
              "schema": {
                "$ref": "#/components/schemas/PostNewInsuranceInput"
              }
          }}},
          "responses": {
            "201": {
              "description": "Created"
            },
            "400": {
              "description": "Bad Request"
            },
            "401": {
              "description": "Unauthorized"
            },
            "500": {
              "description": "Internal Server Error"
            }
          }
        }
      },
      "/insurance/{id}": {
        "get": {
          "tags": [
            "insurance"
          ],
          "description": "Get a single insurance instance based on the ID",
          "parameters": 
          [
            {
              "name": "id",
              "in": "path",
              "schema": {
                "type": "string"
              }, 
              "required": true,
              "description": "The user id"
            }
          ]
          ,
          "responses": {
            "200": {
              "description": "OK"
            },
            "400": {
              "description": "Bad Request"
            },
            "401": {
              "description": "Unauthorized"
            },
            "404": {
              "description": "Not Found"
            },
            "503": {
              "description": "Service Unavailable"
            }
          }
        },
        "put": {
          "tags": [
            "insurance"
          ],
          "description": "Update an insurance instance",
          "requestBody":{
            "required": true,
            "content": {"application/json": {
              "schema": {
                "$ref": "#/components/schemas/PostNewInsuranceInput"
              }
          }}},
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "description": "The insurance id",
              "required": true,
              "schema": {
                "type": "string"
              }
            }
          ],
          "responses": {
            "204": {
              "description": "No Content"
            },
            "400": {
              "description": "Bad Request"
            },
            "401": {
              "description": "Unauthorized"
            },
            "500": {
              "description": "Internal Server Error"
            }
          }
        },
        "delete": {
          "tags": [
            "insurance"
          ],
          "description": "Delete an insurance instance",
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "schema": {
                "type": "string"
              },
              "required": true,
              "description": "The insurance id"
            }],
          "responses": {
            "200": {
              "description": "OK"
            },
            "400": {
              "description": "Bad Request"
            },
            "404": {
              "description": "Not Found"
            },
            "401": {
              "description": "Unauthorized"
            },
            "503": {
              "description": "Service Unavailable"
            }
          }
        }
      },
      "/jewelry/": {
        "get": {
          "tags": [
            "jewelry"
          ],
          "description": "Get all jewelry items in the database",
          "parameters": [],
          "responses": {
            "200": {
              "description": "OK"
            },
            "400": {
              "description": "Bad Request"
            },
            "401": {
              "description": "Unauthorized"
            },
            "503": {
              "description": "Service Unavailable"
            }
          }
        },
        "post": {
          "tags": [
            "jewelry"
          ],
          "description": "Create a new jewerly item",
          "parameters": [
            {
              "name": "body",
              "in": "body",
              "schema": {
                "type": "object",
                "properties": {
                  "finger_size": {
                    "example": "123"
                  },
                  "metal_weight_grams": {
                    "example": "123"
                  },
                  "number_of_stones_1": {
                    "example": "123"
                  },
                  "number_of_stones_2": {
                    "example": "123"
                  },
                  "number_of_stones_3": {
                    "example": "123"
                  },
                  "cttw_stones_1": {
                    "example": "123"
                  },
                  "cttw_stones_2": {
                    "example": "123"
                  },
                  "cttw_stones_3": {
                    "example": "123"
                  },
                  "price_stones_1": {
                    "example": "123"
                  },
                  "price_stones_2": {
                    "example": "123"
                  },
                  "price_stones_3": {
                    "example": "123"
                  },
                  "labor_1": {
                    "example": "123"
                  },
                  "labor_2": {
                    "example": "123"
                  },
                  "labor_3": {
                    "example": "123"
                  },
                  "item_condition": {
                    "example": "any"
                  },
                  "appraisal_note": {
                    "example": "any"
                  },
                  "item_description": {
                    "example": "any"
                  }
                }
              }
            }
          ],
          "responses": {
            "201": {
              "description": "Created"
            },
            "400": {
              "description": "Bad Request"
            },
            "401": {
              "description": "Unauthorized"
            },
            "500": {
              "description": "Internal Server Error"
            }
          }
        }
      },
      "/jewelry/{id}": {
        "get": {
          "tags": [
            "jewelry"
          ],
          "description": "Get a single jewelry item based on the ID",
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "schema": {
                "type": "string"
              },
              "required": true,
              "description": "The jewelry id"
            }
          ],
          "responses": {
            "200": {
              "description": "OK"
            },
            "400": {
              "description": "Bad Request"
            },
            "401": {
              "description": "Unauthorized"
            },
            "404": {
              "description": "Not Found"
            },
            "503": {
              "description": "Service Unavailable"
            }
          }
        },
        "put": {
          "tags": [
            "jewelry"
          ],
          "description": "Update a jewelry item",
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "required": true,
              "type": "string"
            },
            {
              "name": "body",
              "in": "body",
              "schema": {
                "type": "object",
                "properties": {
                  "finger_size": {
                    "example": "123"
                  },
                  "metal_weight_grams": {
                    "example": "123"
                  },
                  "number_of_stones_1": {
                    "example": "123"
                  },
                  "number_of_stones_2": {
                    "example": "123"
                  },
                  "number_of_stones_3": {
                    "example": "123"
                  },
                  "cttw_stones_1": {
                    "example": "123"
                  },
                  "cttw_stones_2": {
                    "example": "123"
                  },
                  "cttw_stones_3": {
                    "example": "123"
                  },
                  "price_stones_1": {
                    "example": "123"
                  },
                  "price_stones_2": {
                    "example": "123"
                  },
                  "price_stones_3": {
                    "example": "123"
                  },
                  "labor_1": {
                    "example": "123"
                  },
                  "labor_2": {
                    "example": "123"
                  },
                  "labor_3": {
                    "example": "123"
                  },
                  "item_condition": {
                    "example": "any"
                  },
                  "appraisal_note": {
                    "example": "any"
                  },
                  "item_description": {
                    "example": "any"
                  }
                }
              }
            }
          ],
          "responses": {
            "204": {
              "description": "No Content"
            },
            "400": {
              "description": "Bad Request"
            },
            "401": {
              "description": "Unauthorized"
            },
            "500": {
              "description": "Internal Server Error"
            }
          }
        },
        "delete": {
          "tags": [
            "jewelry"
          ],
          "description": "Delete a Jewelry Item",
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "schema": {
                "type": "string"
              },
              "required": true,
              "description": "The jewelry id"
            }],
          "responses": {
            "200": {
              "description": "OK"
            },
            "400": {
              "description": "Bad Request"
            },
            "404": {
              "description": "Not Found"
            },
            "401": {
              "description": "Unauthorized"
            },
            "500": {
              "description": "Internal Server Error"
            }
          }
        }
      },
      "/market/": {
        "get": {
          "tags": [
            "market"
          ],
          "description": "Get all market instanaces in the database",
          "parameters": [],
          "responses": {
            "200": {
              "description": "OK"
            },
            "400": {
              "description": "Bad Request"
            },
            "401": {
              "description": "Unauthorized"
            },
            "503": {
              "description": "Service Unavailable"
            }
          }
        },
        "post": {
          "tags": [
            "market"
          ],
          "description": "Create a new market instance",
          "parameters": [
            {
              "name": "body",
              "in": "path",
              "schema": {
                "type": "object",
                "properties": {
                  "metal_name": {
                    "example": "any"
                  },
                  "metal_karatage": {
                    "example": "123"
                  },
                  "metal_price": {
                    "example": "123"
                  },
                  "diamond_price_per_carat": {
                    "example": "123"
                  },
                  "gemstone_price_per_carat": {
                    "example": "123"
                  },
                  "labor_total": {
                    "example": "123"
                  },
                  "retail_modifier": {
                    "example": "123"
                  }
                }
              }
            }
          ],
          "responses": {
            "201": {
              "description": "Created"
            },
            "400": {
              "description": "Bad Request"
            },
            "401": {
              "description": "Unauthorized"
            },
            "500": {
              "description": "Internal Server Error"
            }
          }
        }
      },
      "/market/{id}": {
        "get": {
          "tags": [
            "market"
          ],
          "description": "Get a single market instance based on the ID",
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "schema": {
                "type": "string"
              },
              "required": true,
              "description": "The market id"
            }
          ],
          "responses": {
            "200": {
              "description": "OK"
            },
            "400": {
              "description": "Bad Request"
            },
            "404": {
              "description": "Not Found"
            },
            "503": {
              "description": "Service Unavailable"
            }
          }
        },
        "put": {
          "tags": [
            "market"
          ],
          "description": "Update a market instance",
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "required": true,
              "type": "string"
            },
            {
              "name": "body",
              "in": "body",
              "schema": {
                "type": "object",
                "properties": {
                  "metal_name": {
                    "example": "any"
                  },
                  "metal_karatage": {
                    "example": "123"
                  },
                  "metal_price": {
                    "example": "123"
                  },
                  "diamond_price_per_carat": {
                    "example": "123"
                  },
                  "gemstone_price_per_carat": {
                    "example": "123"
                  },
                  "labor_total": {
                    "example": "123"
                  },
                  "retail_modifier": {
                    "example": "123"
                  }
                }
              }
            }
          ],
          "responses": {
            "204": {
              "description": "No Content"
            },
            "400": {
              "description": "Bad Request"
            },
            "401": {
              "description": "Unauthorized"
            },
            "500": {
              "description": "Internal Server Error"
            }
          }
        },
        "delete": {
          "tags": [
            "market"
          ],
          "description": "Delete a Market Instance",
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "schema": {
                "type": "string"
              },
              "required": true,
              "description": "The market id"
            }],
          "responses": {
            "200": {
              "description": "OK"
            },
            "400": {
              "description": "Bad Request"
            },
            "404": {
              "description": "Not Found"
            },
            "401": {
              "description": "Unauthorized"
            },
            "503": {
              "description": "Service Unavailable"
            }
          }
        }
      }
    }
  }