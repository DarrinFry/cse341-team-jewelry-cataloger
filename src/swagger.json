{
  "openapi": "3.0.0",
"info": {
    "title": "CSE341 Team Project -- Jewelery Cataloger",
    "version": "1.0.0",
    "description": "A program for cataloging jewelry items for insurance purposes ---- <button><a href='https://cse-341-team-jewelry-cataloger.herokuapp.com/logout'>LOGOUT</a></button> ---- "
  },
  "servers": [
    {
        "url": "http://localhost:8080",
        "description": "Development server"
    }
  ],
  "tags": [
    {
      "name": "user",
      "description": "Stuff for inputing and changing a customers user's data."
    },
    {
      "name": "market",
      "description": "Price and infromation for metal and stones."
    },
    {
      "name": "jewelry",
      "description": "Description and details about the jewelry item."
    },
    {
      "name": "insurance",
      "description": "Insurance company and policy information."
    }
  ],
  "paths": {
    "/api-docs": {
      "get": {
        "description": "",
        "parameters": [],
        "responses": {}
      }
    },
    "/user/": {
      "get": {
        "tags": [
          "user"
        ],
        "description": "Get all Users in the database",
        "produces": [
          "application/json"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      },
      "post": {
        "tags": [
          "user"
        ],
        "description": "Create a new User",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "first_name": {
                  "example": "any"
                },
                "last_name": {
                  "example": "any"
                },
                "email_address": {
                  "example": "any"
                },
                "phone_number": {
                  "example": "1234567890"
                },
                "street_address": {
                  "example": "any"
                },
                "city": {
                  "example": "any"
                },
                "state": {
                  "example": "any"
                },
                "zipcode": {
                  "example": "any"
                }
              }
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/user/{id}": {
      "get": {
        "tags": [
          "user"
        ],
        "description": "Get a single user based on the ID",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      },
      "put": {
        "tags": [
          "user"
        ],
        "description": "Update a User",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "first_name": {
                  "example": "any"
                },
                "last_name": {
                  "example": "any"
                },
                "email_address": {
                  "example": "any"
                },
                "phone_number": {
                  "example": "1234567890"
                },
                "street_address": {
                  "example": "any"
                },
                "city": {
                  "example": "any"
                },
                "state": {
                  "example": "any"
                },
                "zipcode": {
                  "example": "any"
                }
              }
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      },
      "delete": {
        "tags": [
          "user"
        ],
        "description": "Delete a User",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "201": {
            "description": "Created"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/insurance/": {
      "get": {
        "tags": [
          "insurance"
        ],
        "description": "Get all insurance instances in the database",
        "produces": [
          "application/json"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      },
      "post": {
        "tags": [
          "insurance"
        ],
        "description": "Create a new insurance instance",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "insurance_company": {
                  "example": "any"
                },
                "insurance_agent": {
                  "example": "any"
                },
                "insurance_policy": {
                  "example": "any"
                }
              }
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/insurance/{id}": {
      "get": {
        "tags": [
          "insurance"
        ],
        "description": "Get a single insurance instance based on the ID",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      },
      "put": {
        "tags": [
          "insurance"
        ],
        "description": "Update an insurance instance",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "insurance_company": {
                  "example": "any"
                },
                "insurance_agent": {
                  "example": "any"
                },
                "insurance_policy": {
                  "example": "any"
                }
              }
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      },
      "delete": {
        "tags": [
          "insurance"
        ],
        "description": "Delete an insurance instance",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "201": {
            "description": "Created"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/jewelry/": {
      "get": {
        "tags": [
          "jewelry"
        ],
        "description": "Get all jewelry items in the database",
        "produces": [
          "application/json"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      },
      "post": {
        "tags": [
          "jewelry"
        ],
        "description": "Create a new jewerly item",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "finger_size": {
                  "example": "123"
                },
                "metal_weight_grams": {
                  "example": "123"
                },
                "number_of_stones_1": {
                  "example": "123"
                },
                "number_of_stones_2": {
                  "example": "123"
                },
                "number_of_stones_3": {
                  "example": "123"
                },
                "cttw_stones_1": {
                  "example": "123"
                },
                "cttw_stones_2": {
                  "example": "123"
                },
                "cttw_stones_3": {
                  "example": "123"
                },
                "price_stones_1": {
                  "example": "123"
                },
                "price_stones_2": {
                  "example": "123"
                },
                "price_stones_3": {
                  "example": "123"
                },
                "labor_1": {
                  "example": "123"
                },
                "labor_2": {
                  "example": "123"
                },
                "labor_3": {
                  "example": "123"
                },
                "item_condition": {
                  "example": "any"
                },
                "appraisal_note": {
                  "example": "any"
                },
                "item_description": {
                  "example": "any"
                }
              }
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/jewelry/{id}": {
      "get": {
        "tags": [
          "jewelry"
        ],
        "description": "Get a single jewelry item based on the ID",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      },
      "put": {
        "tags": [
          "jewelry"
        ],
        "description": "Update a jewelry item",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "finger_size": {
                  "example": "123"
                },
                "metal_weight_grams": {
                  "example": "123"
                },
                "number_of_stones_1": {
                  "example": "123"
                },
                "number_of_stones_2": {
                  "example": "123"
                },
                "number_of_stones_3": {
                  "example": "123"
                },
                "cttw_stones_1": {
                  "example": "123"
                },
                "cttw_stones_2": {
                  "example": "123"
                },
                "cttw_stones_3": {
                  "example": "123"
                },
                "price_stones_1": {
                  "example": "123"
                },
                "price_stones_2": {
                  "example": "123"
                },
                "price_stones_3": {
                  "example": "123"
                },
                "labor_1": {
                  "example": "123"
                },
                "labor_2": {
                  "example": "123"
                },
                "labor_3": {
                  "example": "123"
                },
                "item_condition": {
                  "example": "any"
                },
                "appraisal_note": {
                  "example": "any"
                },
                "item_description": {
                  "example": "any"
                }
              }
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      },
      "delete": {
        "tags": [
          "jewelry"
        ],
        "description": "Delete a Jewelry Item",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "201": {
            "description": "Created"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/market/": {
      "get": {
        "tags": [
          "market"
        ],
        "description": "Get all market instanaces in the database",
        "produces": [
          "application/json"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      },
      "post": {
        "tags": [
          "market"
        ],
        "description": "Create a new market instance",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "metal_name": {
                  "example": "any"
                },
                "metal_karatage": {
                  "example": "123"
                },
                "metal_price": {
                  "example": "123"
                },
                "diamond_price_per_carat": {
                  "example": "123"
                },
                "gemstone_price_per_carat": {
                  "example": "123"
                },
                "labor_total": {
                  "example": "123"
                },
                "retail_modifier": {
                  "example": "123"
                }
              }
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/market/{id}": {
      "get": {
        "tags": [
          "market"
        ],
        "description": "Get a single market instance based on the ID",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      },
      "put": {
        "tags": [
          "market"
        ],
        "description": "Update a market instance",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "metal_name": {
                  "example": "any"
                },
                "metal_karatage": {
                  "example": "123"
                },
                "metal_price": {
                  "example": "123"
                },
                "diamond_price_per_carat": {
                  "example": "123"
                },
                "gemstone_price_per_carat": {
                  "example": "123"
                },
                "labor_total": {
                  "example": "123"
                },
                "retail_modifier": {
                  "example": "123"
                }
              }
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      },
      "delete": {
        "tags": [
          "market"
        ],
        "description": "Delete a Market Instance",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "201": {
            "description": "Created"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    }
  }
}